// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.likbilen.exprint;

public final class Exprintdata {
  private Exprintdata() {}
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static final com.google.protobuf.Descriptors.FileDescriptor
      descriptor = buildDescriptor();
  private static
      com.google.protobuf.Descriptors.FileDescriptor
      buildDescriptor() {
    java.lang.String descriptorData =
      "\n(com/likbilen/exprint/Exprintconfig.pro" +
      "to\022\007exprint\"\236\001\n\rExprintconfig\0220\n\010exprint" +
      "s\030\001 \003(\0132\036.exprint.Exprintconfig.Exprint\022" +
      "\017\n\007printer\030\002 \002(\t\032J\n\007Exprint\022\023\n\013subjectco" +
      "de\030\001 \002(\t\022\020\n\010paralell\030\005 \001(\t\022\030\n\tsolutions\030" +
      "\003 \001(\010:\005false\"6\n\036ExprintserverSetConfigRe" +
      "sponse\022\024\n\014responsecode\030\001 \001(\t\"\006\n\004Void2\301\001\n" +
      "\rExprintserver\0223\n\nget_config\022\r.exprint.V" +
      "oid\032\026.exprint.Exprintconfig\022,\n\014reset_con" +
      "fig\022\r.exprint.Void\032\r.exprint.Void\022M\n\nset" +
      "_config\022\026.exprint.Exprintconfig\032\'.exprin" +
      "t.ExprintserverSetConfigResponseB#\n\024com." +
      "likbilen.exprintB\013Exprintdata";
    try {
      return com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData,
          new com.google.protobuf.Descriptors.FileDescriptor[] {
          });
    } catch (Exception e) {
      throw new RuntimeException(
        "Failed to parse protocol buffer descriptor for " +
        "\"com/likbilen/exprint/Exprintconfig.proto\".", e);
    }
  }
  
  public static final class Exprintconfig extends
      com.google.protobuf.GeneratedMessage {
    // Use Exprintconfig.newBuilder() to construct.
    private Exprintconfig() {}
    
    private static final Exprintconfig defaultInstance = new Exprintconfig();
    public static Exprintconfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public Exprintconfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_Exprintconfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_Exprintconfig_fieldAccessorTable;
    }
    
    public static final class Exprint extends
        com.google.protobuf.GeneratedMessage {
      // Use Exprint.newBuilder() to construct.
      private Exprint() {}
      
      private static final Exprint defaultInstance = new Exprint();
      public static Exprint getDefaultInstance() {
        return defaultInstance;
      }
      
      public Exprint getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.likbilen.exprint.Exprintdata.internal_static_exprint_Exprintconfig_Exprint_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.likbilen.exprint.Exprintdata.internal_static_exprint_Exprintconfig_Exprint_fieldAccessorTable;
      }
      
      // required string subjectcode = 1;
      private boolean hasSubjectcode;
      private java.lang.String subjectcode_ = "";
      public boolean hasSubjectcode() { return hasSubjectcode; }
      public java.lang.String getSubjectcode() { return subjectcode_; }
      
      // optional string paralell = 5;
      private boolean hasParalell;
      private java.lang.String paralell_ = "";
      public boolean hasParalell() { return hasParalell; }
      public java.lang.String getParalell() { return paralell_; }
      
      // optional bool solutions = 3 [default = false];
      private boolean hasSolutions;
      private boolean solutions_ = false;
      public boolean hasSolutions() { return hasSolutions; }
      public boolean getSolutions() { return solutions_; }
      
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistry extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return new Builder(); }
      public Builder newBuilderForType() { return new Builder(); }
      public static Builder newBuilder(com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint prototype) {
        return new Builder().mergeFrom(prototype);
      }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        // Construct using com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.newBuilder()
        private Builder() {}
        
        com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint result = new com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint();
        
        protected com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          result = new com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint();
          return this;
        }
        
        public Builder clone() {
          return new Builder().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.getDescriptor();
        }
        
        public com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint getDefaultInstanceForType() {
          return com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.getDefaultInstance();
        }
        
        public com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint build() {
          if (!isInitialized()) {
            throw new com.google.protobuf.UninitializedMessageException(
              result);
          }
          return buildPartial();
        }
        
        private com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw new com.google.protobuf.UninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint buildPartial() {
          com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint returnMe = result;
          result = null;
          return returnMe;
        }
        
        
        // required string subjectcode = 1;
        public boolean hasSubjectcode() {
          return result.hasSubjectcode();
        }
        public java.lang.String getSubjectcode() {
          return result.getSubjectcode();
        }
        public Builder setSubjectcode(java.lang.String value) {
          result.hasSubjectcode = true;
          result.subjectcode_ = value;
          return this;
        }
        public Builder clearSubjectcode() {
          result.hasSubjectcode = false;
          result.subjectcode_ = "";
          return this;
        }
        
        // optional string paralell = 5;
        public boolean hasParalell() {
          return result.hasParalell();
        }
        public java.lang.String getParalell() {
          return result.getParalell();
        }
        public Builder setParalell(java.lang.String value) {
          result.hasParalell = true;
          result.paralell_ = value;
          return this;
        }
        public Builder clearParalell() {
          result.hasParalell = false;
          result.paralell_ = "";
          return this;
        }
        
        // optional bool solutions = 3 [default = false];
        public boolean hasSolutions() {
          return result.hasSolutions();
        }
        public boolean getSolutions() {
          return result.getSolutions();
        }
        public Builder setSolutions(boolean value) {
          result.hasSolutions = true;
          result.solutions_ = value;
          return this;
        }
        public Builder clearSolutions() {
          result.hasSolutions = false;
          result.solutions_ = false;
          return this;
        }
      }
    }
    
    // repeated .exprint.Exprintconfig.Exprint exprints = 1;
    private java.util.List<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint> exprints_ =
      java.util.Collections.emptyList();
    public java.util.List<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint> getExprintsList() {
      return exprints_;
    }
    public int getExprintsCount() { return exprints_.size(); }
    public com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint getExprints(int index) {
      return exprints_.get(index);
    }
    
    // required string printer = 2;
    private boolean hasPrinter;
    private java.lang.String printer_ = "";
    public boolean hasPrinter() { return hasPrinter; }
    public java.lang.String getPrinter() { return printer_; }
    
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Exprintconfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(com.likbilen.exprint.Exprintdata.Exprintconfig prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using com.likbilen.exprint.Exprintdata.Exprintconfig.newBuilder()
      private Builder() {}
      
      com.likbilen.exprint.Exprintdata.Exprintconfig result = new com.likbilen.exprint.Exprintdata.Exprintconfig();
      
      protected com.likbilen.exprint.Exprintdata.Exprintconfig internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        result = new com.likbilen.exprint.Exprintdata.Exprintconfig();
        return this;
      }
      
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.likbilen.exprint.Exprintdata.Exprintconfig.getDescriptor();
      }
      
      public com.likbilen.exprint.Exprintdata.Exprintconfig getDefaultInstanceForType() {
        return com.likbilen.exprint.Exprintdata.Exprintconfig.getDefaultInstance();
      }
      
      public com.likbilen.exprint.Exprintdata.Exprintconfig build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private com.likbilen.exprint.Exprintdata.Exprintconfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.likbilen.exprint.Exprintdata.Exprintconfig buildPartial() {
        if (result.exprints_ != java.util.Collections.EMPTY_LIST) {
          result.exprints_ =
            java.util.Collections.unmodifiableList(result.exprints_);
        }
        com.likbilen.exprint.Exprintdata.Exprintconfig returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // repeated .exprint.Exprintconfig.Exprint exprints = 1;
      public java.util.List<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint> getExprintsList() {
        return java.util.Collections.unmodifiableList(result.exprints_);
      }
      public int getExprintsCount() {
        return result.getExprintsCount();
      }
      public com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint getExprints(int index) {
        return result.getExprints(index);
      }
      public Builder setExprints(int index, com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint value) {
        result.exprints_.set(index, value);
        return this;
      }
      public Builder setExprints(int index, com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.Builder builderForValue) {
        result.exprints_.set(index, builderForValue.build());
        return this;
      }
      public Builder addExprints(com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint value) {
        if (result.exprints_.isEmpty()) {
          result.exprints_ = new java.util.ArrayList<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint>();
        }
        result.exprints_.add(value);
        return this;
      }
      public Builder addExprints(com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.Builder builderForValue) {
        if (result.exprints_.isEmpty()) {
          result.exprints_ = new java.util.ArrayList<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint>();
        }
        result.exprints_.add(builderForValue.build());
        return this;
      }
      public Builder addAllExprints(
          java.lang.Iterable<? extends com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint> values) {
        if (result.exprints_.isEmpty()) {
          result.exprints_ = new java.util.ArrayList<com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint>();
        }
        super.addAll(values, result.exprints_);
        return this;
      }
      public Builder clearExprints() {
        result.exprints_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string printer = 2;
      public boolean hasPrinter() {
        return result.hasPrinter();
      }
      public java.lang.String getPrinter() {
        return result.getPrinter();
      }
      public Builder setPrinter(java.lang.String value) {
        result.hasPrinter = true;
        result.printer_ = value;
        return this;
      }
      public Builder clearPrinter() {
        result.hasPrinter = false;
        result.printer_ = "";
        return this;
      }
    }
  }
  
  public static final class ExprintserverSetConfigResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ExprintserverSetConfigResponse.newBuilder() to construct.
    private ExprintserverSetConfigResponse() {}
    
    private static final ExprintserverSetConfigResponse defaultInstance = new ExprintserverSetConfigResponse();
    public static ExprintserverSetConfigResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExprintserverSetConfigResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_ExprintserverSetConfigResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_ExprintserverSetConfigResponse_fieldAccessorTable;
    }
    
    // optional string responsecode = 1;
    private boolean hasResponsecode;
    private java.lang.String responsecode_ = "";
    public boolean hasResponsecode() { return hasResponsecode; }
    public java.lang.String getResponsecode() { return responsecode_; }
    
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.newBuilder()
      private Builder() {}
      
      com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse result = new com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse();
      
      protected com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        result = new com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse();
        return this;
      }
      
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.getDescriptor();
      }
      
      public com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse getDefaultInstanceForType() {
        return com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.getDefaultInstance();
      }
      
      public com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse buildPartial() {
        com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional string responsecode = 1;
      public boolean hasResponsecode() {
        return result.hasResponsecode();
      }
      public java.lang.String getResponsecode() {
        return result.getResponsecode();
      }
      public Builder setResponsecode(java.lang.String value) {
        result.hasResponsecode = true;
        result.responsecode_ = value;
        return this;
      }
      public Builder clearResponsecode() {
        result.hasResponsecode = false;
        result.responsecode_ = "";
        return this;
      }
    }
  }
  
  public static final class Void extends
      com.google.protobuf.GeneratedMessage {
    // Use Void.newBuilder() to construct.
    private Void() {}
    
    private static final Void defaultInstance = new Void();
    public static Void getDefaultInstance() {
      return defaultInstance;
    }
    
    public Void getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_Void_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.likbilen.exprint.Exprintdata.internal_static_exprint_Void_fieldAccessorTable;
    }
    
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.likbilen.exprint.Exprintdata.Void parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistry extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return new Builder(); }
    public Builder newBuilderForType() { return new Builder(); }
    public static Builder newBuilder(com.likbilen.exprint.Exprintdata.Void prototype) {
      return new Builder().mergeFrom(prototype);
    }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      // Construct using com.likbilen.exprint.Exprintdata.Void.newBuilder()
      private Builder() {}
      
      com.likbilen.exprint.Exprintdata.Void result = new com.likbilen.exprint.Exprintdata.Void();
      
      protected com.likbilen.exprint.Exprintdata.Void internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        result = new com.likbilen.exprint.Exprintdata.Void();
        return this;
      }
      
      public Builder clone() {
        return new Builder().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.likbilen.exprint.Exprintdata.Void.getDescriptor();
      }
      
      public com.likbilen.exprint.Exprintdata.Void getDefaultInstanceForType() {
        return com.likbilen.exprint.Exprintdata.Void.getDefaultInstance();
      }
      
      public com.likbilen.exprint.Exprintdata.Void build() {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result);
        }
        return buildPartial();
      }
      
      private com.likbilen.exprint.Exprintdata.Void buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw new com.google.protobuf.UninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.likbilen.exprint.Exprintdata.Void buildPartial() {
        com.likbilen.exprint.Exprintdata.Void returnMe = result;
        result = null;
        return returnMe;
      }
      
    }
  }
  
  public static abstract class Exprintserver
      implements com.google.protobuf.Service {
    public abstract void getConfig(
        com.google.protobuf.RpcController controller,
        com.likbilen.exprint.Exprintdata.Void request,
        com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.Exprintconfig> done);
    public abstract void resetConfig(
        com.google.protobuf.RpcController controller,
        com.likbilen.exprint.Exprintdata.Void request,
        com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.Void> done);
    public abstract void setConfig(
        com.google.protobuf.RpcController controller,
        com.likbilen.exprint.Exprintdata.Exprintconfig request,
        com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return com.likbilen.exprint.Exprintdata.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getConfig(controller, (com.likbilen.exprint.Exprintdata.Void)request,
            com.google.protobuf.RpcUtil.<com.likbilen.exprint.Exprintdata.Exprintconfig>specializeCallback(
              done));
          return;
        case 1:
          this.resetConfig(controller, (com.likbilen.exprint.Exprintdata.Void)request,
            com.google.protobuf.RpcUtil.<com.likbilen.exprint.Exprintdata.Void>specializeCallback(
              done));
          return;
        case 2:
          this.setConfig(controller, (com.likbilen.exprint.Exprintdata.Exprintconfig)request,
            com.google.protobuf.RpcUtil.<com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.likbilen.exprint.Exprintdata.Void.getDefaultInstance();
        case 1:
          return com.likbilen.exprint.Exprintdata.Void.getDefaultInstance();
        case 2:
          return com.likbilen.exprint.Exprintdata.Exprintconfig.getDefaultInstance();
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return com.likbilen.exprint.Exprintdata.Exprintconfig.getDefaultInstance();
        case 1:
          return com.likbilen.exprint.Exprintdata.Void.getDefaultInstance();
        case 2:
          return com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.getDefaultInstance();
        default:
          throw new java.lang.RuntimeException("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends com.likbilen.exprint.Exprintdata.Exprintserver {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public void getConfig(
          com.google.protobuf.RpcController controller,
          com.likbilen.exprint.Exprintdata.Void request,
          com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.Exprintconfig> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          com.likbilen.exprint.Exprintdata.Exprintconfig.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.likbilen.exprint.Exprintdata.Exprintconfig.class,
            com.likbilen.exprint.Exprintdata.Exprintconfig.getDefaultInstance()));
      }
      
      public void resetConfig(
          com.google.protobuf.RpcController controller,
          com.likbilen.exprint.Exprintdata.Void request,
          com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          com.likbilen.exprint.Exprintdata.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.likbilen.exprint.Exprintdata.Void.class,
            com.likbilen.exprint.Exprintdata.Void.getDefaultInstance()));
      }
      
      public void setConfig(
          com.google.protobuf.RpcController controller,
          com.likbilen.exprint.Exprintdata.Exprintconfig request,
          com.google.protobuf.RpcCallback<com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.class,
            com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.getDefaultInstance()));
      }
    }
  }
  
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_exprint_Exprintconfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_exprint_Exprintconfig_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
          internal_static_exprint_Exprintconfig_descriptor,
          new java.lang.String[] { "Exprints", "Printer", },
          com.likbilen.exprint.Exprintdata.Exprintconfig.class,
          com.likbilen.exprint.Exprintdata.Exprintconfig.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_exprint_Exprintconfig_Exprint_descriptor =
      internal_static_exprint_Exprintconfig_descriptor.getNestedTypes().get(0);
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_exprint_Exprintconfig_Exprint_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
          internal_static_exprint_Exprintconfig_Exprint_descriptor,
          new java.lang.String[] { "Subjectcode", "Paralell", "Solutions", },
          com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.class,
          com.likbilen.exprint.Exprintdata.Exprintconfig.Exprint.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_exprint_ExprintserverSetConfigResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_exprint_ExprintserverSetConfigResponse_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
          internal_static_exprint_ExprintserverSetConfigResponse_descriptor,
          new java.lang.String[] { "Responsecode", },
          com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.class,
          com.likbilen.exprint.Exprintdata.ExprintserverSetConfigResponse.Builder.class);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_exprint_Void_descriptor =
      getDescriptor().getMessageTypes().get(2);
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_exprint_Void_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessage.FieldAccessorTable(
          internal_static_exprint_Void_descriptor,
          new java.lang.String[] { },
          com.likbilen.exprint.Exprintdata.Void.class,
          com.likbilen.exprint.Exprintdata.Void.Builder.class);
}
